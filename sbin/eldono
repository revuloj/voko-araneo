#!/bin/bash

# eldonas kadrajn paĝojn, sendante ilin al la publika servilo
# tio estas iom provizora solvo, kiun necesas plibonigi poste:
#
# la kadraj paĝoj prefere ankaŭ aperu en la ĉiutagaj eldonoj de la vortaro,
# almenaŭ dum eblas uzi la vortaron loke per statikaj paĝoj....
# Tamen ni ne volas ilin inkluzivi en voko-grundo, voko-formiko dum ni
# iom pli multe prilaboras ilin, por eviti ĉiufoje krei novan procezumon voko-formiko

# jen kelkaj informoj kiel eviti plurfoje doni la pasvorton por scp:
# https://linux.101hacks.com/unix/ssh-controlmaster/
# + ControlPersist 2m
# http://blogs.perl.org/users/smylers/2011/08/ssh-productivity-tips.html

# Tio estas la eldono de voko-grundo kontraŭ kiu ni kompilas ĉion
# ĝi devas ekzisti jam kiel git-tag (kaj sekve kiel kodarĥivo kaj procezujo) en Github
# en celo "preparo" ni metas tiun eldonon ankaŭ por dosiernomoj kc. de voko-araneo
# Ni ankaŭ supozas, ke nova eldono okazas en git-branĉo kun la sama nomo
# Ĉe publikigo marku la kodstaton per etikedo (git-tag) v${eldono}.
# Dum la realigo vi povas ŝovi la etikedon ĉiam per celo "etikedo".
eldono=2j

# aldonu en /etc/hosts!
host=revo
revo=${host}:www/revo
cgibin=${host}:www/cgi-bin
perllib=${host}:files/perllib


# ni komprenas preparo | docker | servilo | index
# kaj supozas "docker", se nenio donita argumente
target="${1}"

case $target in
servilo)

    # poste la plusendan index.html ni havu ankaŭ rekte sub /revo...
    scp revo/dlg/index-${eldono}.html ${revo}/dlg/
    scp revo/dlg/titolo-${eldono}.html ${revo}/dlg/
    scp revo/dlg/redakt*-${eldono}.html ${revo}/dlg/
    ### scp -r revo/dlg/404.html ${revo}/dlg/

    scp cgi/sercxu-json-${eldono}.pl ${cgibin}/
    #scp cgi/traduku-uwn.pl ${cgibin}/

    #scp revo/smb/revo.svg ${host}:/html/favicon.ico
    #scp revo/smb/revo64.png ${host}:/html/favicon.ico

    # cgi-bin/admin
    #scp cgi/admin/* ${cgibin}/admin/
    #scp cgi/admin/.ht* ${cgibin}/admin/
    #scp cgi/admin/checkversioj.pl ${cgibin}/admin/
    #scp cgi/perllib/art_db.pm ${perllib}/

    #scp cgi/admin/up* ${cgibin}/admin/
    #scp cgi/perllib/parse* ${perllib}/

    #scp cgi/vokosubmx.pl ${cgibin}/
    #scp cgi/vokosubm-json.pl ${cgibin}/
    #scp cgi/admin/submeto.pl ${cgibin}/admin/
    #scp cgi/mrk_eraroj.pl ${cgibin}/
    #scp cgi/admin/uprevo.pl ${cgibin}/admin/
    #scp cgi/admin/upviki.pl ${cgibin}/admin/

    ;;
pwa)
    scp revo/manifest.json ${revo}/
    scp revo/offline.html ${revo}/
    scp revo/sw.js ${revo}/
    ;;
index)
    scp revo/index.html ${revo}/
    scp revo/index.html ${host}:www/
    ;;
index-mn)
    ## sendu malnovajn versiojn al la nova...
    scp revo/index.html ${revo}/dlg/index-2a.html
    scp revo/index.html ${revo}/dlg/index-2b.html
    scp revo/index.html ${revo}/dlg/index-2d.html
    scp revo/index.html ${revo}/dlg/index-2e.html
    scp revo/index.html ${revo}/dlg/index-2f.html
    # scp revo/index.html ${revo}/dlg/index-2g.html
    ;;
ofc)
    # PLIBONIGU: tio funkcias nur ĉe mi loke pro aranĝo de projektoj
    # eble prenu la JSON-dosierojn de pli kohera loko aŭ kreu ilin laŭbezone?
    scp ../voko-cikado/steloj.de/fundamento/fundamento.json ${revo}/inx
    scp ../voko-cikado/steloj.de/ofcaldonoj/ofcaldonoj.json ${revo}/inx
    scp cgi/admin/upofc.pl ${cgibin}/admin
    ;;
preparo)
    # kontrolu ĉu la branĉo kongruas kun la agordita versio
    branch=$(git symbolic-ref --short HEAD)
    if [ "${branch}" != "${eldono}" ]; then
        echo "Ne kongruas la branĉo (${branch}) kun la eldono (${eldono})"
        echo "Agordu la variablon 'eldono' en tiu ĉi skripto por prepari novan eldonon."
        exit 1
    fi

    echo "Aktualigante skriptojn al nova eldono ${eldono}..."
    # ŝanĝu la dosiernomojn
    mv revo/dlg/index-??.html revo/dlg/index-${eldono}.html
    mv revo/dlg/titolo-??.html revo/dlg/titolo-${eldono}.html 
    mv revo/dlg/redaktilo-??.html revo/dlg/redaktilo-${eldono}.html 
    mv revo/dlg/redaktmenu-??.html revo/dlg/redaktmenu-${eldono}.html 

    mv cgi/sercxu-json-??.pl cgi/sercxu-json-${eldono}.pl 

    # ŝanĝu la version / dosiernomoj en la skriptoj
    sed -i 's,/revo-[1-9][a-z]-min\.,/revo-'${eldono}'-min\.,g' revo/index.html
    sed -i 's,/index-[1-9][a-z]\.,/index-'${eldono}'\.,g' revo/index.html
    sed -i -r 's,-[1-9][a-z]([-.]),-'${eldono}'\1,g' revo/sw.js
    sed -i 's,/revo-[1-9][a-z]-min\.,/revo-'${eldono}'-min\.,g' revo/dlg/*

    #sed -ri 's/FROM voko-grundo:[1-9][a-z]/FROM voko-grundo:'${eldono}'/' Dockerfile
    #sed -ri 's/ARG ([A-Z_]+)=[1-9][a-z]$/ARG \1='${eldono}'/' Dockerfile
    ;;
etikedo)
    echo "Provizante la aktualan staton per etikedo (git tag) v${eldono}"
    echo "kaj puŝante tiun staton al la centra deponejo"
    git tag -f v${eldono} && git push && git push origin v${eldono} -f
    ;;
kreo)
    echo "Kreante lokan procezujon (por docker) voko-araneo por eldono ${eldono}..."
    docker pull ghcr.io/revuloj/voko-grundo/voko-grundo:${eldono}
    docker build --build-arg VERSION=${eldono} -t voko-araneo .
    ;;
kreo-kompleta)
    echo "Kreante lokan procezujon (por docker) voko-araneo por eldono ${eldono}..."
    docker pull ghcr.io/revuloj/voko-grundo/voko-grundo:${eldono}
    docker build --no-cache --build-arg VERSION=${eldono} -t voko-araneo .
    ;;
esac
